@inherits BasePage
@inject IDialogService DialogService

<div>
    @if (@IsShowToolTip())
    {
        <div data-tooltip="@ShowToolTip()">
            <button class="@GetClass()" @onclick="OpenDialog">@ShowLabel()</button>
        </div>
    }
    else 
    {
        <button class="@GetClass()" @onclick="OpenDialog">@ShowLabel()</button>
    }

</div>


@code {
    private AppConfigDto? appConfig;

    [Parameter]
    public string Key { get; set; }

    private bool _showNoKey = false;
    private bool _showTooltip = false;
    private bool _showLink = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitialiseBasePage();
            appConfig = await GetConfig();
            _showNoKey = appConfig?.Label.ShowNoKey ?? false;
            _showTooltip = appConfig?.Label.ShowTooltip ?? false;
            _showLink = appConfig?.Label.ShowLink ?? false;
            
            StateHasChanged();
        }
    }

    private string ShowLabel()
    {
        if (IsLabel(Key)) return GetLabel(Key);
        return
            (_showNoKey ? "[" : "")
            + Key
            + (_showNoKey ? "]" : "")
            ;
    }

    private bool IsShowToolTip() => IsTooltip(Key);
    private string? ShowToolTip() => GetTooltip(Key);
    private bool IsShowDialogLink() => _showLink && IsLabel(Key);
    
    private string GetClass()
    {
        var l = IsLabel(Key);
        if (!l && _showNoKey) return "label-nokey";
        if (!l && _showLink) return "label-link";
        return "label";
    }

    private Task OpenDialog()
    {
        var options = new DialogOptions 
            { 
                CloseOnEscapeKey = true,
                Position = DialogPosition.TopCenter,
                MaxWidth = MaxWidth.Medium
            };
        var parameters = new DialogParameters
            {
                { "LangKey", Key }
            };

        var title = GetLabel("LabelEdit");
        return DialogService.ShowAsync<LabelDialog>(title, parameters, options);
    }
}
